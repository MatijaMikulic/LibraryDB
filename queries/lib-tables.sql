
CREATE TABLE CITY(
    PBR NUMERIC(5),
    CITY_NAME VARCHAR(30) NOT NULL,
    
    CONSTRAINT CITY_PK PRIMARY KEY(PBR)
);

CREATE TABLE LIB_MEMBER(
    ID_M INT IDENTITY(1,1),
    FIRST_NAME VARCHAR(20) NOT NULL,
    LAST_NAME VARCHAR(20) NOT NULL,
    DATE_OF_MEMBERSHIP DATE NOT NULL,
    DATE_OF_PAYMENT DATE NOT NULL,
    TYPE_MEMBER CHAR(1) NOT NULL,
    PBR NUMERIC(5),
    
    CONSTRAINT LIB_MEMBER_PK PRIMARY KEY(ID_M),
    CONSTRAINT TYPE_CHK CHECK(TYPE_MEMBER IN ('U','S','R')),
    CONSTRAINT LIB_MEMBER_FK FOREIGN KEY(PBR) REFERENCES CITY(PBR)
);

CREATE TABLE AUTHOR
(
    ID_AUTH INT IDENTITY(1,1),
    FIRST_NAME VARCHAR(20) NOT NULL,
    LAST_NAME VARCHAR(20) NOT NULL,
    DATE_OF_BIRTH DATE,
    
    CONSTRAINT AUTHOR_PK PRIMARY KEY(ID_AUTH)
);


CREATE TABLE PUBLISHER(
    ID_PUB INT IDENTITY(1,1),
    PUB_NAME VARCHAR(30) NOT NULL,
    
    CONSTRAINT PUBLISHER_PK PRIMARY KEY(ID_PUB)
);

CREATE TABLE BOOK(
    ID_BOOK INT IDENTITY(1,1),
    ISBN CHAR(13),
    NUMBER_AVAILABLE INT DEFAULT 1,
    TITLE VARCHAR(30) NOT NULL,
    PUBLISH_DATE DATE,
    NAME_TYPE VARCHAR(20),
    ID_PUBLISHER INT,
    
    CONSTRAINT CATALOG_PK PRIMARY KEY(ID_BOOK),
    CONSTRAINT CATALOG_UK UNIQUE(ISBN),
    
    CONSTRAINT CATALOG_PUBLISHER_FK FOREIGN KEY(ID_PUBLISHER) REFERENCES PUBLISHER(ID_PUB),
    
    CONSTRAINT NUMBER_AVAILABLE_CHK CHECK(NUMBER_AVAILABLE >= 0)
);


CREATE TABLE WRITES(
    ID_AUTHOR INT,
    ID_BOOK INT,
    
    CONSTRAINT WRITES_PK PRIMARY KEY(ID_AUTHOR,ID_BOOK),
    CONSTRAINT WRITES_AUTHOR_FK FOREIGN KEY(ID_AUTHOR) REFERENCES AUTHOR(ID_AUTH),
    CONSTRAINT WRITES_CATALOG_FK FOREIGN KEY(ID_BOOK) REFERENCES BOOK(ID_BOOK)
);


CREATE TABLE LOAN(
    ID_M INT,
    ID_BOOK INT,
    DATE_LOAN DATE NOT NULL,
    DATE_DEADLINE DATE NOT NULL,
    DATE_RETURN DATE,
    DELAY_COST INT,
    
    CONSTRAINT LOAN_PK PRIMARY KEY(ID_M,ID_BOOK),
    
    CONSTRAINT LOAN_CATALOG_FK FOREIGN KEY(ID_BOOK) REFERENCES BOOK(ID_BOOK),
    CONSTRAINT LOAN_M_FK FOREIGN KEY(ID_M) REFERENCES LIB_MEMBER(ID_M),
    
    CONSTRAINT DELAY_COST_CHK CHECK(DELAY_COST >= 0)
);

